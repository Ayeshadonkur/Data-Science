1. Retrieve employee names and their department names using INNER JOIN
--SELECT e.employee_id, e.first_name, d.department_id
--FROM hr.employees e
--INNER JOIN hr.departments d ON e.department_id = d.department_id

2. Retrieve all employees and their respective department names (including those without a department) using LEFT JOIN
-- SELECT e.employee_id, e.last_name, d.department_id
-- from hr.employees e
-- left join hr.departments d on e.department_id = d.department_id

3. Retrieve all departments and employees (including departments without employees) using RIGHT JOIN
-- SELECT e.employee_id, e.first_name, d.department_id
-- FROM hr.employees e
-- RIGHT JOIN hr.departments d ON e.department_id = d.department_id

4. Retrieve all employees and their department names using FULL OUTER JOIN
-- select e.employee_id,e.first_name,d.DEPARTMENT_ID
-- from hr.employees e
-- full outer join hr.departments d on e.department_id = d.department_id

 5. Retrieve employees who do not belong to any department using LEFT JOIN with NULL check
-- SELECT e.employee_id, e.FIRST_NAME
-- FROM hr.employees e
-- LEFT JOIN HR.DEPARTMENTS d ON e.department_id = d.department_id
-- WHERE d.department_id IS NULL

6.Retrieve departments that have no employees using RIGHT JOIN with NULL check
-- SELECT d.department_id,d.department_name
-- from hr.employees e
-- right join hr.departments d on e.department_id=d.department_id
-- where e.employee_id is null

7. Retrieve employees along with their manager names using SELF JOIN
-- select e.employee_id,e.first_name,m.last_name,m.manager_id
-- from hr.employees e
-- left join hr.employees m on e.manager_id=e.employee_id

 8. Retrieve employees along with their job title using INNER JOin
-- SELECT e.employee_id, e.first_name, e.last_name, j.job_title
-- FROM hr.employees e
-- INNER JOIN hr.jobs j ON e.job_id = j.job_id


 9. Retrieve employees along with the location of their department using INNER JOIN
-- SELECT e.employee_id, e.first_name, d.department_name, l.city
-- FROM hr.employees e
-- INNER JOIN hr.departments d ON e.department_id = d.department_id
-- INNER JOIN hr.locations l ON d.location_id = l.location_id

10. Retrieve employees and the projects they are assigned to using INNER JOIN
-- SELECT e.employee_id, e.first_name, p.project_name
-- FROM hr.employees e
-- INNER JOIN projects.projects p ON e.employee_id = p.project_name

11.SELECT e.employee_id, e.first_name
FROM hr.employees e
LEFT JOIN projects.projects p ON e.employee_id = p.id
WHERE p.id IS NULL;

12. Retrieve project names along with the department handling them using INNER JOIN
SELECT p.name, d.department_name
FROM PROJECTS.projects p
INNER JOIN hr.departments d ON p.id = d.department_id;


28. Retrieve employees and their project details, even if they are not assigned to a project using LEFT JOIN
SELECT e.employee_id, e.first_name, p.name
FROM hr.employees e
LEFT JOIN projects.projects p ON e.employee_id = p.id;

29. Retrieve departments and the count of employees in each department using INNER JOIN and GROUP BY
SELECT d.department_id, d.department_name, COUNT(e.employee_id) AS employee_count
FROM hr.departments d
LEFT JOIN hr.employees e ON d.department_id = e.department_id
GROUP BY d.department_id, d.department_name;


30. Retrieve employees who work on projects located in a different city than their department using INNER JOIN
SELECT e.employee_id, e.first_name, d.department_name, p.name, l.city AS project_city
FROM hr.employees e
INNER JOIN projects.projects p ON e.employee_id = p.id
INNER JOIN hr.departments d ON e.department_id = d.department_id
INNER JOIN hr.locations l ON p.id = l.location_id
WHERE d.location_id <> p.id;






